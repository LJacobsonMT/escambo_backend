# Retorno do usuário p/ usuário final no frontend
# ! indica que é obrigatório

#User Schema
type User {
    id: ID!
    name: String!
    email: String!
    cpf: String!
    phone: String!
    city: String!
    uf: String!
    address: String!
    address_number: String!
    cep: String!
    complement: String!
    birth: String!
    password: String!
    token: String!
    products: [String],
}

input UserInput { 
  name: String!
  email: String!
}

input LoginInput {
    email: String!
    password: String!
}

# Product Schema
type Product {
    id: ID!,
    user_id: String!,
    title: String!,
    description: String!,
    category: String!,
    images: [String],
    value: String,
}

input ProductInput {
    title: String,
    description: String,
    category: String,
    images: [String],
    value: String,
}

#Tudo que estiver dentro do array tem que ser do tipo usuário: !
#Fora tem que retornar array


type Query {
    # User Queries
    users: [User!]!
    user(id: ID!): User

    # Product Queries
    products: [Product!]!
    product(id: ID!): Product

    # Profile Query
    profile(id: ID!): [Product!]!
}   

type Mutation {
    # User Mutations
    createUser(
        name: String!, 
        email: String!, 
        cpf: String!, 
        phone: String!, 
        city: String!, 
        uf: String!,
        address: String!,
        address_number: String!,
        cep: String!,
        complement: String!,
        birth: String!
        password: String!
        products: [String],

    ): User
    deleteUserById(id: ID!): User
    updateUser(id: ID!, userInput: UserInput): User!
    loginUser(loginInput: LoginInput): User

    # Product Mutations
    createProduct(
        user_id: String!,
        title: String!,
        description: String!,
        category: String!,
        images: [String],
        value: String,
    ): Product
    deleteProductById(id: ID!): Product
    updateProduct(id: ID!, productInput: ProductInput): Product!

}